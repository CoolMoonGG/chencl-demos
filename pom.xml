<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.chencl</groupId>
    <artifactId>chencl-demos</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>Web_Admin</module>
        <module>Web_Common</module>
        <module>Test_MyBatis</module>
    </modules>
    <repositories>
        <!--<repository>-->
            <!--<id>nexus</id>-->
            <!--<name>Team Nexus Repository</name>-->
            <!--<url>http://192.165.4.200:28081/nexus/content/groups/public</url>-->
        <!--</repository>-->

        <!--<repository>-->
            <!--<id>aliyun</id>-->
            <!--<name>aliyun maven Repository</name>-->
            <!--<url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
        <!--</repository>-->

        <!--<repository>-->
            <!--<id>mvnrepository.com</id>-->
            <!--<name>mvnrepository</name>-->
            <!--<url>http://mvnrepository.com/artifact</url>-->
        <!--</repository>-->

    </repositories>

    <pluginRepositories>
        <!-- team plugin -->
        <!--<pluginRepository>-->
            <!--<id>nexus</id>-->
            <!--<name>Team Nexus Repository</name>-->
            <!--<url>http://192.165.4.200:28081/nexus/content/groups/public</url>-->
        <!--</pluginRepository>-->

        <!-- aliyun plugin -->
        <pluginRepository>
            <id>maven-net-cn</id>
            <name>aliyun plguin</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <properties>
        <!-- PROJECT -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- JDK  -->
        <jdk.version>1.7</jdk.version>
        <!-- MOTAN -->
        <motan.version>0.2.2</motan.version>
        <!-- SPRING -->
        <spring.version>4.2.5.RELEASE</spring.version>
        <!-- spring boot -->
        <spring-boot.version>1.3.1.RELEASE</spring-boot.version>
        <!-- JACKSON -->
        <jackson.version>2.6.7</jackson.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!--
            JUnit : a unit testing framework for Java, created by Erich Gamma and Kent Beck
             -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.8.1</version>
                <scope>test</scope>
            </dependency>

            <!-- JMock 2 Core  -->
            <dependency>
                <groupId>org.jmock</groupId>
                <artifactId>jmock</artifactId>
                <version>2.5.1</version>
                <scope>test</scope>
            </dependency>

            <!-- Jmock Junit4 -->
            <dependency>
                <groupId>org.jmock</groupId>
                <artifactId>jmock-junit4</artifactId>
                <version>2.5.1</version>
                <scope>test</scope>
            </dependency>

            <!-- Jmock Legacy -->
            <dependency>
                <groupId>org.jmock</groupId>
                <artifactId>jmock-legacy</artifactId>
                <version>2.5.1</version>
                <scope>test</scope>
            </dependency>

            <!-- Cglib Nodep -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>2.2.2</version>
            </dependency>

            <!--  Objenesis: A library for instantiating Java objects -->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <scope>test</scope>
                <version>1.2</version>
            </dependency>

            <!-- Java Servlet API  -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>1.1</version>
                <scope>provided</scope>
            </dependency>

            <!-- JavaServer Pages(TM) Standard Tag Library -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
                <scope>provided</scope>
            </dependency>

            <!-- JavaMail API (compat)  -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.5</version>
            </dependency>

            <!--
            JavaBeans(TM) Activation Framework v.1.1 Specification
             -->
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0.2</version>
            </dependency>
            <!--
            Hessian : a compact binary protocol for connecting web services
            -->
            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>4.0.38</version>
            </dependency>

            <!--
            Metrics : a Java library which gives you unparalleled insight into what your code does in production.
            Metrics provides a powerful toolkit of ways to measure the behavior of critical components in your production environment.
             -->
            <dependency>
                <groupId>com.codahale.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>3.0.1</version>
            </dependency>

            <!--
             Motan Core: sina motan RPC framework
            -->
            <dependency>
                <groupId>com.weibo</groupId>
                <artifactId>motan-core</artifactId>
                <version>${motan.version}</version>
            </dependency>

            <!-- Motan Transport Netty -->
            <dependency>
                <groupId>com.weibo</groupId>
                <artifactId>motan-transport-netty</artifactId>
                <version>${motan.version}</version>
            </dependency>

            <!-- only needed for spring-based features -->
            <dependency>
                <groupId>com.weibo</groupId>
                <artifactId>motan-springsupport</artifactId>
                <version>${motan.version}</version>
            </dependency>

            <!-- Motan Springsupport  -->
            <dependency>
                <groupId>com.weibo</groupId>
                <artifactId>motan-registry-zookeeper</artifactId>
                <version>${motan.version}</version>
            </dependency>

            <!-- AOP Alliance  -->
            <dependency>
                <groupId>aopalliance</groupId>
                <artifactId>aopalliance</artifactId>
                <version>1.0</version>
            </dependency>

            <!-- AspectJ Weaver: The AspectJ weaver introduces advices to java classes   -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.8.8</version>
            </dependency>

            <!--aop must aspectjrt -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.8.8</version>
            </dependency>

            <!-- Spring Core  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Beans -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Context -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Context Support -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Transaction -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring AOP  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Web  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Web MVC  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring JDBC -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spring Batch Core
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-core</artifactId>
                <version>3.0.7.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-infrastructure</artifactId>
                <version>3.0.7.RELEASE</version>
            </dependency>
            -->

            <!--
            Spring Retry provides an abstraction around retrying failed operations, with an emphasis on declarative control of the process and policy-based bahaviour that is easy to extend and customize. For instance, you can configure a plain POJO operation to retry if it fails,
            based on the type of exception, and with a fixed or exponential backoff
             -->
            <!--<dependency>-->
            <!--<groupId>org.springframework.retry</groupId>-->
            <!--<artifactId>spring-retry</artifactId>-->
            <!--<version>1.1.5.RELEASE</version>-->
            <!--</dependency>-->

            <!-- Spring TestContext Framework -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>log4j-over-slf4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>1.12.6.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- Mybatis
            The MyBatis SQL mapper framework makes it easier to use a relational database with object-oriented applications.
            MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.
            Simplicity is the biggest advantage of the MyBatis data mapper over object relational mapping tools.
             -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.2.3</version>
            </dependency>

            <!--
            Mybatis Spring
            An easy-to-use Spring bridge for MyBatis sql mapping framework
             -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.2.2</version>
            </dependency>

            <!--
            MySQL Connector/J
            MySQL JDBC Type 4 driver -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.40</version>
            </dependency>

            <!--
            Druid: An JDBC datasource implementation.
             -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.27</version>
            </dependency>

            <!--
            Apache Log4j
             -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>

            <!--
            SLF4J API Module
             -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.5</version>
            </dependency>

            <!--
            SLF4J LOG4J-12 Binding
             -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.5</version>
            </dependency>

            <!--
            Fastjson : a JSON processor (JSON parser + JSON generator) written in Java
             -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.21</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.json/json -->
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>20160810</version>
            </dependency>


            <!--
             Jackson Core
            Core Jackson abstractions, basic JSON streaming API implementation
             -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!--
             Jackson Annotations
            Core annotations used for value types, used by Jackson data binding package.
             -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!--
            Jackson Databind
            General data-binding functionality for Jackson: works on core streaming API
             -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!--
            Apache Velocity : a general purpose template engine.
             -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity</artifactId>
                <version>1.7</version>
            </dependency>

            <!--
            VelocityTools
            an integrated collection of Velocity subprojects with the common goal of creating tools and infrastructure to speed and ease development of both web and non-web applications using the Velocity template engine.
             -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-tools</artifactId>
                <version>2.0</version>
                <exclusions>
                    <exclusion>
                        <artifactId>struts-tiles</artifactId>
                        <groupId>org.apache.struts</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>struts-taglib</artifactId>
                        <groupId>org.apache.struts</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>struts-core</artifactId>
                        <groupId>org.apache.struts</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
            Apache Commons IO
            The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.
            -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>

            <!--
            Apache Commons FileUpload
            The Apache Commons FileUpload component provides a simple yet flexible means of adding support for
                multipart file upload functionality to servlets and web applications.
             -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.2.2</version>
            </dependency>

            <!--
            Commons Lang: a package of Java utility classes for the classes that are in java.lang's hierarchy,
                or are considered to be so standard as to justify existence in java.lang.
            -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>

            <!--
            Apache Commons Net : a library contains a collection of network utilities and protocol implementations.
             Supported protocols include: Echo, Finger, FTP, NNTP, NTP, POP3(S), SMTP(S), Telnet, Whois
             -->
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>3.1</version>
            </dependency>

            <!--
            Apache Commons Configuration
            Tools to assist in the reading of configuration/preferences files in various formats.
            -->
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.10</version>
            </dependency>

            <!--
            Commons JXPath
            A Java-based implementation of XPath 1.0 that, in addition to XML processing,
            can inspect/modify Java object graphs (the library's explicit purpose) and even mixed Java/XML structures.
             -->
            <dependency>
                <groupId>commons-jxpath</groupId>
                <artifactId>commons-jxpath</artifactId>
                <version>1.3</version>
            </dependency>

            <!--
            Apache Commons Codec
            The Apache Commons Codec package contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.
            In addition to these widely used encoders and decoders, the codec package also maintains a collection of phonetic encoding utilities.
             -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
            </dependency>

            <!--
            Apache Commons BeanUtils : provides an easy-to-use but flexible wrapper around reflection and introspection.
             -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.2</version>
            </dependency>

            <!--
            The Digester package lets you configure an XML to Java object mapping module
            which triggers certain actions called rules whenever a particular pattern of nested XML elements is recognized.
             -->
            <dependency>
                <groupId>commons-digester</groupId>
                <artifactId>commons-digester</artifactId>
                <version>2.1</version>
            </dependency>

            <!--
            Apache Commons Math
            The Apache Commons Math project is a library of lightweight,
            self-contained mathematics and statistics components addressing the most common
            practical problems not immediately available in the Java programming language or commons-lang.
             -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>3.2</version>
            </dependency>

            <!--
            Apache Commons Collections
            Types that extend and augment the Java Collections Framework.
             -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>

            <!--
            Apache Logging Component
             -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.3</version>
            </dependency>

            <!--
            Commons Pool
            Commons Object Pooling Library -->
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.6</version>
            </dependency>
            <!--
            Apache Commons Pool
            Apache Commons Object Pooling Library
            spring-data-redis 依赖
            -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.4.2</version>
            </dependency>


            <!--
            Guava: Google Core Libraries For Java
            Guava is a suite of core and expanded libraries that include utility classes,
             google's collections, io classes, and much much more. Guava has only one code dependency - javax.annotation, per the JSR-305 spec.
             -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>19.0</version>
            </dependency>

            <!--
            Esper
            Complex event processing and event series analysis component

            <dependency>
                <groupId>com.espertech</groupId>
                <artifactId>esper</artifactId>
                <version>5.3.0</version>
            </dependency>
             -->

            <!--
            Library to send notifications using APNS
             -->
            <dependency>
                <groupId>javapns</groupId>
                <artifactId>jdk16</artifactId>
                <version>163</version>
            </dependency>

            <!--
            Xmemcached
            Extreme performance modern memcached client for java
             -->
            <dependency>
                <groupId>com.googlecode.xmemcached</groupId>
                <artifactId>xmemcached</artifactId>
                <version>2.2.0</version>
            </dependency>

            <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf</artifactId>-->
            <!--<version>2.7.7</version>-->
            <!--<type>pom</type>-->
            <!--</dependency>-->
            <!---->
            <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-frontend-jaxws</artifactId>-->
            <!--<version>2.7.7</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
            <!--<groupId>org.apache.cxf</groupId>-->
            <!--<artifactId>cxf-rt-transports-http</artifactId>-->
            <!--<version>2.7.7</version>-->
            <!--</dependency>-->

            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>3.0.0</version>
            </dependency>

            <!-- redis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.0</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-redis</artifactId>
                <version>1.7.6.RELEASE</version>
            </dependency>

            <!-- web socket -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-websocket</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-messaging</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!--
            quartz-scheduler
            Enterprise Job Scheduler
             -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>2.2.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>c3p0</groupId>
                        <artifactId>c3p0</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
            Quartz utility jobs
             -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>2.2.1</version>
            </dependency>

            <!-- httpclient XXX remote -->
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.2</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>4.5.2</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>4.4.5</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.5</version>
            </dependency>

            <!-- excel POI -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>3.13</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>3.13</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>3.13</version>
            </dependency>

            <dependency>
                <groupId>stax</groupId>
                <artifactId>stax-api</artifactId>
                <version>1.0.1</version>
            </dependency>

            <!--
            JDOM
            A complete, Java-based solution for accessing, manipulating, and outputting XML data
             -->
            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>1.1</version>
            </dependency>

            <!--  富文本编辑框 -->
            <dependency>
                <groupId>com.baidu</groupId>
                <artifactId>ueditor</artifactId>
                <version>1.1.2</version>
            </dependency>

            <!-- jpush: 极光推送 -->
            <dependency>
                <groupId>cn.jpush.api</groupId>
                <artifactId>jpush-client</artifactId>
                <version>3.2.6</version>
            </dependency>

            <!-- aliyun oss -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>2.0.0</version>
            </dependency>

            <!-- 银联 -->
            <dependency>
                <groupId>com.umpay.api</groupId>
                <artifactId>umpay</artifactId>
                <version>4.0</version>
            </dependency>

            <dependency>
                <groupId>unionpay</groupId>
                <artifactId>unionpay</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>1.4.7</version>
            </dependency>

            <!-- 支付宝 -->
            <dependency>
                <groupId>com.alipay</groupId>
                <artifactId>api</artifactId>
                <version>1.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.pdfbox</groupId>
                <artifactId>pdfbox</artifactId>
                <version>2.0.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.pdfbox</groupId>
                <artifactId>fontbox</artifactId>
                <version>2.0.4</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>5.5.10</version>
            </dependency>

            <!-- 手机号码归属地 -->
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>geocoder</artifactId>
                <version>2.15</version>
            </dependency>

            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>6.3</version>
            </dependency>

            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>prefixmapper</artifactId>
                <version>2.15</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>carrier</artifactId>
                <version>1.5</version>
            </dependency>


        </dependencies>
    </dependencyManagement>
    <!-- 插件配置 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- compiler插件, 设定JDK版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <showWarnings>true</showWarnings>
                    </configuration>
                </plugin>

                <!-- resource插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>

                <!-- test插件, 仅测试名称为*Test的类, 使用支持分组测试的surefire-junit47 driver -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.12.4</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>2.12.4</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- war打包插件, 设定war包名称不带版本号 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <warName>${project.artifactId}</warName>
                    </configuration>
                </plugin>

                <!-- jar打包相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <!-- source插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2</version>
                </plugin>

                <!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

                <!-- install插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.1.1</version>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.0.3</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>1.6</version>
                                    </requireJavaVersion>
                                    <bannedDependencies>
                                        <searchTransitive>true</searchTransitive>
                                        <excludes>
                                            <!-- <exclude>commons-logging</exclude> -->
                                            <!-- <exclude>aspectj:aspectj*</exclude> -->
                                            <exclude>org.springframework:2.*</exclude>
                                            <exclude>org.springframework:3.0.*</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- assembly插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

                <!-- dependency相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <!-- exec java 插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>
</project>